import{XtallatX}from"./node_modules/xtal-latx/xtal-latx.js";import{WithPath}from"./node_modules/xtal-latx/with-path.js";import{define}from"./node_modules/xtal-latx/define.js";var input="input",delay="delay";export var XtalInsertJson=function(_WithPath){babelHelpers.inherits(XtalInsertJson,_WithPath);function XtalInsertJson(){babelHelpers.classCallCheck(this,XtalInsertJson);return babelHelpers.possibleConstructorReturn(this,(XtalInsertJson.__proto__||Object.getPrototypeOf(XtalInsertJson)).apply(this,arguments))}babelHelpers.createClass(XtalInsertJson,[{key:"attributeChangedCallback",value:function attributeChangedCallback(name,oldVal,newVal){switch(name){case input:this.input=JSON.parse(newVal);break;case"with-path":this._withPath=newVal;break;case delay:this._delay=parseFloat(newVal);break;}babelHelpers.get(XtalInsertJson.prototype.__proto__||Object.getPrototypeOf(XtalInsertJson.prototype),"attributeChangedCallback",this).call(this,name,oldVal,newVal);this.onPropChange()}},{key:"loadJSON",value:function loadJSON(callBack){var _this=this,scriptTag=this.querySelector("script[type=\"application/json\"]");if(!scriptTag){setTimeout(function(){_this.loadJSON(callBack)},100);return}var stringToParse=scriptTag.innerText;if(!this._objectsToMerge){try{if(this.refs){this._objectsToMerge=JSON.parse(stringToParse,function(key,val){if("string"!==typeof val)return val;if(!val.startsWith("${refs.")||!val.endsWith("}"))return val;var realKey=val.substring(7,val.length-1);return _this.refs[realKey]})}else{if(!this._objectsToMerge)this._objectsToMerge=JSON.parse(stringToParse)}}catch(e){console.error("Unable to parse "+stringToParse)}}callBack()}},{key:"postLoadJson",value:function postLoadJson(mergedObj){if(this._objectsToMerge&&mergedObj){for(var i=0,ii=this._objectsToMerge.length,objToMerge;i<ii;i++){objToMerge=this._objectsToMerge[i];Object.assign(mergedObj,objToMerge)}}this.mergedProp=mergedObj}},{key:"onPropChange",value:function onPropChange(){var _this2=this;if(!this._connected||this._disabled||!this._input)return;var mergedObj=this.wrap(this._input);this.loadJSON(function(){_this2.postLoadJson(mergedObj)})}},{key:"connectedCallback",value:function connectedCallback(){this.style.display="none";this._upgradeProperties([delay,input,"refs","withPath","postMergeCallbackFn"]);this._connected=!0;this.onPropChange()}},{key:"input",get:function get(){return this._input},set:function set(val){var _this3=this;if(this._delay){setTimeout(function(){_this3._input=val;_this3.onPropChange()},this._delay)}else{this._input=val;this.onPropChange()}}},{key:"refs",get:function get(){return this._refs},set:function set(val){this._refs=val;delete this._objectsToMerge;this.onPropChange()}},{key:"mergedProp",get:function get(){return this._mergedProp},set:function set(val){var newVal=val;if(this._postMergeCallbackFn){newVal=this._postMergeCallbackFn(val,this);if(!newVal)return}this.value=this._mergedProp=newVal;this.de("merged-prop",{value:newVal})}},{key:"postMergeCallbackFn",get:function get(){return this._postMergeCallbackFn},set:function set(){this._postMergeCallbackFn}},{key:"delay",get:function get(){return this._delay},set:function set(newVal){this.attr(delay,newVal.toString())}},{key:"objectsToMerge",get:function get(){return this._objectsToMerge},set:function set(val){this._objectsToMerge=val}}],[{key:"is",get:function get(){return"xtal-insert-json"}},{key:"observedAttributes",get:function get(){return babelHelpers.get(XtalInsertJson.__proto__||Object.getPrototypeOf(XtalInsertJson),"observedAttributes",this).concat([delay,"with-path",input])}}]);return XtalInsertJson}(WithPath(XtallatX(HTMLElement)));define(XtalInsertJson);