(function(){function a(a){class b extends a(HTMLElement){constructor(){super(...arguments),this.passThruOnInit=!1}static get is(){return'json-merge'}static get properties(){return{wrapObjectWithPath:{type:String},watch:{type:Object,observer:'onPrePropsChange'},result:{type:Object,notify:!0,readOnly:!0},refs:{type:Object},passThruOnInit:{type:Boolean},delay:{type:Number}}}mergeDeep(a,b){if('object'===typeof a&&'object'===typeof b){for(const e in b){const f=b[e],g=a[e];if(f){if(!g){a[e]=f;continue}if(Array.isArray(f)&&Array.isArray(g)){if(0<g.length&&'undefined'===typeof g[0].id)continue;for(var c=0,d=f.length;c<d;c++){const a=f[c];if('undefined'===typeof a.id)continue;const b=g.find(function(b){return b.id===a.id});b?this.mergeDeep(b,a):g.push(a)}continue}switch(typeof f){case'object':switch(typeof g){case'object':this.mergeDeep(g,f);break;default:console.log(e),a[e]=f;}break;default:a[e]=f;}}}return a}}loadJSON(){const a=this.querySelector('script[type="application/json"]');let b;if(a)b=a.innerText;else if(void 0!==typeof json_merge_allow_json_without_script_tag&&json_merge_allow_json_without_script_tag)b=this.innerText;else return void console.error('Unable to find script tag child with type application/json, and global variable json_merge_allow_json_without_script_tag != true');try{this._objectsToMerge=this.refs?JSON.parse(b,(a,b)=>{if('string'!==typeof b)return b;if(!b.startsWith('${refs.')||!b.endsWith('}'))return b;const c=b.substring(7,b.length-1);return this.refs[c]}):JSON.parse(b)}catch(a){console.error('Unable to parse '+b)}return this._objectsToMerge}onPrePropsChange(a){this.delay?setTimeout(()=>{this.onPropsChange(a)},this.delay):this.onPropsChange(a)}onPropsChange(a){let b;if(this.wrapObjectWithPath?(b={},b[this.wrapObjectWithPath]=a):b=a,this.loadJSON(),this._objectsToMerge&&b)for(let a=0,c=this._objectsToMerge.length;a<c;a++){const c=this._objectsToMerge[a];switch(typeof c){case'object':this.mergeDeep(b,c);break;default:throw'TODO:  error message';}}this._setResult(b)}ready(){super.ready(),this.passThruOnInit&&this.onPropsChange({})}}customElements.define(b.is,b)}function b(){return c=document.currentScript,'function'!==typeof Polymer||'function'!==typeof Polymer.ElementMixin?void setTimeout(b,100):void a(Polymer.ElementMixin)}let c;b()})();